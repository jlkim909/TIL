export const uxAccessibility ='<h1>Accessibility(웹 접근성 유형 12개 리뷰</h1><h1>)</h1><p><br></p><h2>한 눈에 보기</h2><blockquote>(<span style="background-color: rgb(204, 232, 204);">적절한 대체 텍스트 제공</span>) 텍스트 아닌 콘텐츠는 그 의미나 용도를 인식할 수 있도록 대체 텍스트를 제공해야 한다.</blockquote><blockquote>(<span style="background-color: rgb(204, 232, 204);">반복 영역 건너뛰기</span>) 콘텐츠의 반복되는 영역은 건너뛸 수 있어야 한다.</blockquote><blockquote>(<span style="background-color: rgb(204, 232, 204);">레이블 제공</span>) 사용자 입력에는 대응하는 레이블을 제공해야 한다.</blockquote><blockquote>(<span style="background-color: rgb(204, 232, 204);">자막 제공</span>) 멀티미디어 콘텐츠에는 자막, 대본 또는 수화를 제공해야 한다.</blockquote><blockquote>(<span style="background-color: rgb(204, 232, 204);">제목 제공</span>)페이지, 프레임, 콘텐츠 블록에는 적절한 제목을 제공해야 한다.</blockquote><blockquote>(<span style="background-color: rgb(204, 232, 204);">정지 기능 제공</span>) 자동으로 변경되는 콘텐츠는 움직임을 제어할 수 있어야 한다.</blockquote><blockquote>(<span style="background-color: rgb(204, 232, 204);">키보드 사용 보장</span>) 모든 기능은 키보드만으로도 사용할 수 있어야 한다.</blockquote><blockquote>(<span style="background-color: rgb(204, 232, 204);">초점 이동</span>) 키보드에 의한 초점은 논리적으로 이동해야 하며 시각적으로 구별할 수 있어야 한다.</blockquote><blockquote>(<span style="background-color: rgb(204, 232, 204);">텍스트 콘텐츠의 명도 대비</span>) 텍스트 콘텐츠와 배경 간의 명도 대비는 4.5대 1 이상이어야 한다.</blockquote><blockquote>(<span style="background-color: rgb(204, 232, 204);">기본 언어 표시</span>) 주로 사용하는 언어를 명시해야 한다.</blockquote><p><br></p><p>애플이 웹 접근성에 관심이 많은 이유</p><ul><li>사용자 경험이 높아지기 때문</li><li>웹 접근성 실태 조사 한국지능정보사회진흥원 https://t.ly/EnwZ</li></ul><p><strong>대체 텍스트 제공(Non-text Content, 준수율 24.1%)</strong></p><p>-&gt; WCAG 2.x : 텍스트 아닌 콘텐츠는 그 목적에 상응하는 대체 텍스트를 포함한 상태로 표시해야 한다.(국제)</p><p>-&gt; KWCAG 2.x : <span style="background-color: rgb(204, 232, 204);">(적절한 대체 텍스트 제공) 텍스트 아닌 콘텐츠는 그 의미나 용도를 인식할 수 있도록 대체 텍스트를 제공해야 한다.</span>(국내)</p><ul><li>장식 목적 이미지 대체 텍스트 제공 금지</li></ul><p class="ql-align-center">-&gt; &lt;img src="valid.jpg" alt="장식"&gt; 이런 경우는 alt를 비워두는 것이 좋다.</p><ul><li>주변 문맥을 통해 이미 충분히 설명하고 있는 내용은 대체 텍스트 불필요.(중복금지) -&gt; 화면 낭독기를 사용하는 시각 장애인들에게 더 불편함</li><li>CSS 배경 이미지에 의미가 포함된 경우 IR(Image Replacement)기법 사용 -&gt; display, visibility, widht, height, font-size를 0으로 설정하는 방법은 바람직하지 않고, position:absolute, opacity:0으로 설정하는 방법을 사용(보조 공학기가 해석을 안해주게 된다.)</li></ul><p><strong>Bypass Blocks (반복 영역 건너뛰기, 준수율 25.5%)</strong></p><p>-&gt; WCAG 2.x : 여러 웹 페이지에서 반복되는 콘텐츠 블록을 우회할 수 있어야 한다.</p><p>-&gt; KWCAG 2.x : <span style="background-color: rgb(204, 232, 204);">(반복 영역 건너뛰기) 콘텐츠의 반복되는 영역은 건너뛸 수 있어야 한다.</span></p><p>Info and Relationships (표의 구성, 준수율 28.9)</p><p>-&gt; WCAG 2.x : 화면에 전달하는 정보, 구조, 관계는 텍스트로 변환하거나 기계가 인식할 수 있어야 한다.</p><p>-&gt; KWCAG 2.x : (표의 구성) 표는 이해하기 쉽게 구성해야 한다.</p><ul><li>caption 태그를 활용해서 제목으로 내용이 관심이 있는지 파악할 수 있게 한다.</li><li>&lt;th&gt; 태그와 th 태그 안에 있는 scope(행/열을나타냄)을 사용한다.</li></ul><p><strong>Labels or Instructions(레이블 제공, 준수율 30.9%)</strong></p><p>-&gt; WCAG 2.x : 콘텐츠가 사용자 입력을 요구할 때 레이블 또는 설명을 제공해야 한다.</p><p>-&gt; KWCAG 2.x : <span style="background-color: rgb(204, 232, 204);">(레이블 제공) 사용자 입력에는 대응하는 레이블을 제공해야 한다</span></p><ul><li>&lt;input&gt; 태그를 사용할 때, &lt;label&gt; 태그를 달아주어, 어떤 입력인지 알 수 있도록 한다. value나 placeholder로는 input을 설명하기에 적절한 속성이 아님</li><li>aria-label 속성을 사용할 순 있지만, 화면에 노출되지는 않는다.</li></ul><p><strong>Captions (Prerecoreded, 자막 제공, 준수율 36.5%)</strong></p><p>-&gt; WCAG 2.x : 녹음된 음성 콘텐츠에 동기화된 자막을 제공해야 한다. 미디어가 문자를 대체하기 위한 설명이면 예외</p><p>-&gt; KWCAG 2.x : <span style="background-color: rgb(204, 232, 204);">(자막 제공) 멀티미디어 콘텐츠에는 자막, 대본 또는 수화를 제공해야 한다.</span></p><ul><li>&lt;video&gt; 태그에 &lt;track&gt; 태그를 넣어 자막 제공 가능</li><li>자막을 제공하기 어려운 경우 한국에서 허용하는 방식. 대본 또는 수어 제공</li></ul><p><strong>Page Titled / Headings and Labels (제목 제공, 준수율 41.1%)</strong></p><p>-&gt; WCAG 2..x : 웹 페이지는 주제나 목적을 설명하는 제목(title)이 있어야 한다. 제목(heading)과 레이블은 주제 또는 목적을 설명해야 한다.</p><p>-&gt; KWCAG 2.x : <span style="background-color: rgb(204, 232, 204);">(제목 제공)페이지, 프레임, 콘텐츠 블록에는 적절한 제목을 제공해야 한다.</span></p><ul><li>검색 엔진에도 상당히 중요한 영향을 미치는 부분</li><li>접근성 측면에서도 가장 중요한 부분</li><li>다른 페이지와 중복없는 고유한 제목을 사용</li><li>특수문자는 사용하지 않는다.</li><li>&lt;h1....5&gt; 태그를 잘 활용한다.</li><li>&lt;iframe&gt; 태그에는 aria-lable 속성을 사용해서 제목을 붙인다. </li></ul><p><strong>Timing Adjustable(정지 기능 제공, 준수율 44%)</strong></p><p>-&gt; WCAG 2.x : 콘텐츠에 시간 제한이 설정되어 있다면 최소한 다음 중 하나를 만족해야 한다. (끄기, 조절, 연장)</p><p>-&gt; KWCAG 2.x : <span style="background-color: rgb(204, 232, 204);">(정지 기능 제공) 자동으로 변경되는 콘텐츠는 움직임을 제어할 수 있어야 한다.</span></p><ul><li>이미지 슬라이드의 경우 정지기능, 이전/다음 기능을 제공</li></ul><p><strong>Keyboard(준수율 55%)</strong></p><p>-&gt; WCAG 2.x : 콘텐츠의 모든 기능은 개인적인 타이핑 속도에 구애 받지 않고 키보드 인터페이스를 이용하여 조작이 가능해야 한다.</p><p>-&gt; KWCAG 2.x : <span style="background-color: rgb(204, 232, 204);">(키보드 사용 보장) 모든 기능은 키보드만으로도 사용할 수 있어야 한다.</span></p><ul><li>풍선 도움말이나, 호버시 드랍메뉴 등. 마우스를 올렸을 때 발생하는 이벤트는 키보드로 포커스를 맞출 때도 등장해야 한다.</li><li>장지 독립적 이벤트 핸들러 : 키보드와 마우스의 동등한 사용을 보장하는 이벤트 핸들러(onblur, onchange, onclick, onfocus, oninput, onselect) -&gt; (ex) onClick의 경우 마우스 클릭도 되지만 키보드 포커스를 맞추고 엔터를 쳤을 때도 발동</li></ul><p><strong>No keyboard Trap / Focus Visible(준수율 61%)</strong></p><p>-&gt; WCAG 2.x : 키보드 인터페이스를 이용하여 페이지 구성 요소로 포커스 이동이 가능하다면 포커스는 키보드 인터페이스 만으로 구성 요소로부터 떠날 수 있어야 한다. 키보드 조작 가능한 모든 사용자 인터페이스는 키보드 포커스 표시가 보이는 방식으로 제공해야 한다.</p><p>-&gt; KWCAG 2.x : <span style="background-color: rgb(204, 232, 204);">(초점 이동) 키보드에 의한 초점은 논리적으로 이동해야 하며 시각적으로 구별할 수 있어야 한다.</span></p><ul><li>Ex) 로그인 화면의 경우 아이디 -&gt; 비밀번호 -&gt; 로그인 순으로 탭이 이동해야 한다.</li><li>아웃라인으로 포커스를 표시해야 한다</li></ul><p><strong>Contrast(Minimum, 준수율 70,1%)</strong></p><p>-&gt; WCAG 2.x : 문자와 문자 이미지의 시각적인 표현은 최소한 4.5:1의 명암 대비를 부여해야 한다.(큰 문자, 장식, 로고 제외)</p><p>-&gt; KWCAG 2.x : <span style="background-color: rgb(204, 232, 204);">(텍스트 콘텐츠의 명도 대비) 텍스트 콘텐츠와 배경 간의 명도 대비는 4.5대 1 이상이어야 한다.</span></p><ul><li>https://t.ly/Ncsc -&gt; 색상을 입력했을 때, 접근성이 있는 색을 추천해줌</li></ul><p><strong>Language of Page(준수율 71.1%)</strong></p><p>-&gt; WCAG 2.x : 모든 웹 페이지의 기본 휴먼 랭귀지는 기계적으로 판단할 수 있어야 한다.</p><p>-&gt; KWCAG 2.x : <span style="background-color: rgb(204, 232, 204);">(기본 언어 표시) 주로 사용하는 언어를 명시해야 한다.</span></p><p>Error Identification / Suggestion(준수율 76.8%)</p><p>-&gt; WCAG 2.x : 만약 입력 오류가 자동으로 감지되면 오류 항목을 식별하고 사용자에게 문자로 알려야 한다. 의견을 제공해야 한다.</p><p>-&gt; KWCAG 2.x : (오류정정) 입력 오류를 정정할 수 있는 방법을 제공해야 한다.</p><p><br></p><p>실습과제</p><p>웹 접근성 퀴즈 - https://t.ly/x5ia</p>'
export const uxAria ='<h1>HTML 만으로 20% 부족할 때</h1><p>ARIA(Accessible Rich Internet Application) : 접근 가능한 고기능 인터넷 애플리케이션 </p><p>HTML의 접근성 문제를 보완하는 W3C 명세 : HTML에 역할(role), 상태(state), 속성(properties) 정보를 부여하여 보조기기의 웹 문서 접근을 지원 </p><p><br></p><p>return to HTML</p><p>-&gt; 웹 접근성 문제의 80%는 HTML을 잘못 사용해서 발생한 문제이다.</p><ul><li>목적에 알맞는 HTML 태그를 사용하는 것만으로도 대부분의 웹 접근성 문제를 해결할 수 있다.</li></ul><p><br></p><h2>실전 ARIA-역할(role)</h2><ol><li>role은 HTML 의미를 풍부하게 만듦</li><li><span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">element</span> <span style="color: rgb(156, 220, 254);">role</span>=<span style="color: rgb(206, 145, 120);">"tablish"</span><span style="color: rgb(128, 128, 128);">&gt;</span> </li><li><span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">element</span> <span style="color: rgb(156, 220, 254);">role</span>=<span style="color: rgb(206, 145, 120);">"tab"</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li><span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">element</span> <span style="color: rgb(156, 220, 254);">role</span>=<span style="color: rgb(206, 145, 120);">"tabpanel"</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li><span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">element</span> <span style="color: rgb(156, 220, 254);">role</span>=<span style="color: rgb(206, 145, 120);">"tooltip"</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li><span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">element</span> <span style="color: rgb(156, 220, 254);">role</span>=<span style="color: rgb(206, 145, 120);">"status"</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li><span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">element</span> <span style="color: rgb(156, 220, 254);">role</span>=<span style="color: rgb(206, 145, 120);">"alert"</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li>밑의 역할은 태그를 변경해서 의미를 생성</li><li><span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">element</span> <span style="color: rgb(156, 220, 254);">role</span>=<span style="color: rgb(206, 145, 120);">"alertdialog"</span><span style="color: rgb(128, 128, 128);">&gt;</span> == <span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">dialog</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li><span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">element</span> <span style="color: rgb(156, 220, 254);">role</span>=<span style="color: rgb(206, 145, 120);">"dialog"</span><span style="color: rgb(128, 128, 128);">&gt;</span> == <span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">dialog</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li><span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">element</span> <span style="color: rgb(156, 220, 254);">role</span>=<span style="color: rgb(206, 145, 120);">"navigation"</span><span style="color: rgb(128, 128, 128);">&gt;</span> == <span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">nav</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li><span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">element</span> <span style="color: rgb(156, 220, 254);">role</span>=<span style="color: rgb(206, 145, 120);">"complementary"</span><span style="color: rgb(128, 128, 128);">&gt;</span> == <span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">aside</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li><span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">element</span> <span style="color: rgb(156, 220, 254);">role</span>=<span style="color: rgb(206, 145, 120);">"none"</span><span style="color: rgb(128, 128, 128);">&gt;</span> == <span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">div</span><span style="color: rgb(128, 128, 128);">&gt;</span></li></ol><p><strong>tablist | tab | tabpannel</strong></p><ul><li>세트 처럼 붙어 다님</li><li>탭 스타일을 의미하는 것이 아니라, 현재 페이지 내용에 색인을 제공하는 구조(tablist, tab, tabpanel)를 의미</li><li>사이트 탐색 도구에 해당하는 요소는 nav &gt; h2 + ul 또는 aside &gt; h2 + ul 구조로 마크업</li></ul><p><strong>tooltip</strong></p><ul><li>보통 초점을 받으면 설명을 표시하는 문맥 팝업.</li><li>툴팁은 초점을 받지 않아야 한다. ESC 또는 마우스를 빼면 사라져야 한다.</li><li>참조하는 콘트롤에는 aria-describedby="ID reference list" 속성으로 연결</li></ul><p><strong>status</strong></p><ul><li>실시간 결과 정보. role="alert"만큼 중요하지는 않음 -&gt; 안내 메시지를 제공하는 데 alert은 중요한 오류를 제공하고 그렇지 않은 평범한 안내를 사용할 때 제공(실행이 완료되거나, 실행 결과를 알려줄 때)</li><li>이 요소를 갱신할 때 초점을 받지 않아야 한다</li><li>이 역할을 선언하면 자동으로 aria-live="polite", aria-atomic="true" 속성이 할당 됨</li><li>-&gt; aria-live="polite" : 음성 낭독기가 이미 진행 중인 음성은 끊지 않고 기다렸다가 나중에 음성을 전달하는 기능</li><li>-&gt; aria-atomic="true" : 부분적으로 갱신이 되었다 하더라도 그 문장 전체를 다시 읽어주는 특징을 가지고 있음.</li></ul><p>alert</p><ul><li>시간에 민감하고 중요한(오류, 제안) 실시간 콘텐츠</li><li>이 요소를 갱신할 때 초점을 받지 않아야 한다</li><li>aria-live="assertive" 속성과 aria-atomic="true" 속성 자동 할당</li><li>-&gt; aria-live="assertive" : 현재 진행 중이던 과업, 음성 낭독을 중단하고 즉시 오류 내용을 사용자에게 알림</li></ul><h2>실전 ARIA-상태(states)</h2><ol><li><span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">element</span> <span style="color: rgb(156, 220, 254);">aria-current</span>=<span style="color: rgb(206, 145, 120);">"</span><span style="color: rgb(206, 145, 120);" class="ql-size-small">page | step | location | data | time | true | false(default)</span><span style="color: rgb(206, 145, 120);">"</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li><span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">element</span> <span style="color: rgb(156, 220, 254);">aria-selected</span>=<span style="color: rgb(206, 145, 120);">"</span><span style="color: rgb(206, 145, 120);" class="ql-size-small">false | true | undefined(default)</span><span style="color: rgb(206, 145, 120);">"</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li><span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">element</span> <span style="color: rgb(156, 220, 254);">aria-haspopup</span>=<span style="color: rgb(206, 145, 120);">"</span><span style="color: rgb(206, 145, 120);" class="ql-size-small">true | menu | dialog | listbox | tree | grid | false(default)</span><span style="color: rgb(206, 145, 120);">"</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li><span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">element</span> <span style="color: rgb(156, 220, 254);">aria-expanded</span>=<span style="color: rgb(206, 145, 120);">"</span><span style="color: rgb(206, 145, 120);" class="ql-size-small">true | false | undefined(default)</span><span style="color: rgb(206, 145, 120);">"</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li><span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">element</span> <span style="color: rgb(156, 220, 254);">aria-hidden</span>=<span style="color: rgb(206, 145, 120);">"</span><span style="color: rgb(206, 145, 120);" class="ql-size-small">true | false | undefined(default)</span><span style="color: rgb(206, 145, 120);">"</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li><span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">element</span> <span style="color: rgb(156, 220, 254);">aria-invalid</span>=<span style="color: rgb(206, 145, 120);">"</span><span style="color: rgb(206, 145, 120);" class="ql-size-small">true | false(default) | grammar | spelling</span><span style="color: rgb(206, 145, 120);">"</span><span style="color: rgb(128, 128, 128);">&gt;</span></li></ol><p><strong>aria-current</strong>="page | step | location | data | time | true | false(default)"</p><p>-&gt; 현재 맥락과 일치하는 항목을 의미</p><ul><li>page : 현재 "페이지"와 일치하는 시각적으로 강조한 링크(주로사용)</li><li>step : 현재 "단계"와 일치하는 시각적으로 강조한 링크(가끔 사용)</li><li>location : 플로우 차트에서 현재 "위치"와 일치하는 시각적으로 강조한 이미지</li><li>date : 달력에서 현재 "날짜"와 일치하는 날짜</li><li>time : 시간표에서 현재 "시간"과 일치하는 시간</li><li>true : 항목이 세트 내 현재 맥락과 일치함</li><li>false(default) : 항목이 세트 내 현재 맥락과 일치하지 않음. 속성 또는 값을 선언하지 않은 경우 초기값</li></ul><p><strong>aria-selected</strong>="false | true | undefined(default)"</p><p>-&gt; 단일 또는 다중 선택이 가능한 요소(role="gridcell | option | row | tab")에 선택 상태를 명시하는 의미</p><p>-&gt; role="tab" 요소에 가장 흔히 사용</p><p>-&gt; 키보드 초점을 받을 수 있는 요소에 적용</p><ul><li>undefined(default) : 속성 또는 값을 선언하지 않은 경우 초기값. 선택할 수 없음</li><li>true : 선택 가능한 요소를 선택했음 </li><li>false : 선택 가능한 요소를 선택하지 않았음</li></ul><p><strong>aria-haspopup</strong>="true | menu | dialog | listbox | tree | grid | false(default)"</p><p>-&gt; 요소에 연결되어 있는 팝업(메뉴, 대화상자 등) 정보를 제공</p><p>-&gt; 팝업 유형은 menu, listbox, tree, grid, dialog 으로 제한</p><p>-&gt; 일반적으로 menu와 dialog 유형이 빈번</p><ul><li>true : menu와 동일한 의미</li><li>menu : menu(role) 팝입이 연결됨. menu(role)는 링크 목록</li><li>dialog : dialog(role) 팝업이 연결됨 .dialog(role)는 상호작용 요소(버튼 도는 콘트롤)가 포함된 현재 문서의 하위창</li><li>listbox : listbox(role) 팝업이 연결됨. listbox(role)는 선택 가능한 option(role)을 포함한 콤보박스</li><li>tree : tree(role) 팝업이 연결됨. tree(role)는 하위 list(role)을 포함하며 접고 펼칠 수 있음</li><li>grid : grid(role) 팝업이 연결됨. grid(role)는 행과 열로 구성된 선택 가능한 위젯. 상호작용 가능한 셀이기 때문에 table(role)과는 역할이 다름에 유의</li><li>false(default) : 연결된 팝업이 없음을 의미</li></ul><p><strong>aria-expanded</strong>="true | false | undefined(default)"</p><p>-&gt; 제어 대상의 확장 또는 축소 상태</p><p>-&gt; aria-controls 속성으 이용하여 제어 대상을 명시</p><p>-&gt; 툴팁(role=tooltip), 알럿(role=alert), 알럿 대화상자(role=alertdialog), 대화상자(role=dialog)와 같이 동적으로 표시 상태를 결정(토글)하는 요소에 적용</p><ul><li>true : 요소 또는 제어 대상 확장 상태</li><li>false : 요소 또는 제어 대상 축소 상태</li><li>undefined(default) : 제어 대상이 없거나 모두 확장 상태. 확장/축소 제어 불가능</li></ul><p><strong>aria-hidden</strong>="true | false | undefined(default)"</p><p>-&gt; 접근성 API(보조기기 접근 가능성) 차단 상태를 결정</p><p>-&gt; 예를 들면 모달 대화상자를 화면에 표시할 때 모달 대화상자 뒤 본문 콘텐츠에 aria-hidden="true" 속성을 선언하면 보조기기가 무시(모달을 띄우고 뒷 배경은 회색으로 표시할 경)</p><ul><li>true : 접근성 API 차단.(화면 표시 여부와 무관 API차단)</li><li>false : 접근성 API 사용. (화면에 표시한 경우 API 사용)</li><li>undefined(default) : 화면 표시 여부에 따라 접근성 API 차단 상태를 결정. 화면에 표시하면 false, 화면에서 숨기면 true</li></ul><p><strong>aria-invalid</strong>="true | false(default) | grammar | spelling"</p><p>-&gt; 주로 &lt;input&gt; 요소에 선언</p><p>-&gt; 사용자가 입력한 값이 요구하는 형식과 일치하는지 여부를 나타낸다.</p><p>-&gt; aria-errormessage 속성과 함께 사용하여 오류 설명을 제공할 수 있다.</p><ul><li>false(default) : 오류 없음. aria-invalid 속성을 선언하지 않거나 값이 없으면 false로 간주</li><li>true : 오류 있음</li><li>grammar : 문법 오류</li><li>spelling : 철자 오류</li></ul><h2>실전 ARIA - 속성(properties)</h2><ol><li><span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">element</span> <span style="color: rgb(156, 220, 254);">aria-controls</span>=<span style="color: rgb(206, 145, 120);">"ID reference list"</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li><span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">element</span> <span style="color: rgb(156, 220, 254);">aria-live</span>=<span style="color: rgb(206, 145, 120);">"polite | assertive | off(default)"</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li><span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">element</span> <span style="color: rgb(156, 220, 254);">aria-labelledby</span>=<span style="color: rgb(206, 145, 120);">"ID reference list"</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li><span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">element</span> <span style="color: rgb(156, 220, 254);">aria-label</span>=<span style="color: rgb(206, 145, 120);">"string"</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li><span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">element</span> <span style="color: rgb(156, 220, 254);">aria-describedby</span>=<span style="color: rgb(206, 145, 120);">"ID reference list"</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li><span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">element</span> <span style="color: rgb(156, 220, 254);">aria-errormessage</span>=<span style="color: rgb(206, 145, 120);">"ID reference"</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li><span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">element</span> <span style="color: rgb(156, 220, 254);">aria-modal</span>=<span style="color: rgb(206, 145, 120);">"true | false(default)"</span><span style="color: rgb(128, 128, 128);">&gt;</span></li></ol><p><br></p><p><strong>aria-controls</strong>="ID reference list"</p><ul><li>현재 요소가 제어하는 대상을 명시</li><li>주로 role="tab", aria-haspopup, aria-expanded 속성과 함께 &lt;button&gt; 요소가 무엇을 제어하는지 명시</li><li>값은 하나 이상의 ID 참조. 값이 여럿인 경우 공백으로 분리</li></ul><p><strong>aria-live</strong>="polite | assertive | off(default)"</p><p>-&gt; 실시간으로 내용을 갱신하는 영역</p><p>-&gt; 갱신 영역에 polite, assertive 값을 사용하면 갱신 순간 보조 기기가 사용자에게 내용을 전달</p><ul><li>polite 값은 중요도가 낮은 내용에 사용. 현재 진행중인 음성 또는 타이핑을 방해하지 않고 뒤늦게 전달</li><li>assertive 값은 중요도가 높은 내용에 사용하여 현재 진행중인 보조기기 작업을 중단하고 갱신 내용을 즉시 사용자에게 전달</li></ul><p><strong>aria-labelledby</strong>="ID reference list"</p><ul><li>간결한 설명 참조</li><li>ID(s) 값을 이용하여 내용을 참조(연결)</li><li>보통 hx, a, button 요소를 참조하면 적절</li><li>aria-label 속성과 함께 선언하는 경우, aria-labelledby 속성이 우선순위가 높음</li></ul><p><strong>aria-label</strong>="string"</p><ul><li>간결한 설명(string)을 직접 제공</li><li>가능한 aria-labelledby 속성을 권장</li><li>설명할 다른 참조(연결) 요소가 없는 경우 사용</li></ul><p><strong>aria-describedby</strong>="ID reference list"</p><ul><li>자세하고 구체적인 설명 참조</li><li>ID(s) 값을 이용하여 상세한 내용을 참조(연결)</li><li>주로 툴팁, 링크(a), 폼 콘트롤(input, textarea, select, button), 알럿(role=alert), 알럿 대화상자(role=alertdialog)요소에 사용하면 적</li></ul><p><strong>aria-errormessage</strong>="ID reference"</p><ul><li>오류 메시지 참조. 주로 &lt;input&gt;요소에 선언</li><li>aria-invalid="true" 속성을 활성화하면 보조기기는 aria-errormessage 속성이 참조하는 내용을 오류메시지로 전달</li><li>오류 메시지는 오류원인과 해결방법을 포함</li></ul><p><strong>aria-modal</strong>="true | false(default)"</p><p>-&gt; 요소가 모달인지 여부를 보조기기에 전달</p><p>-&gt; 보통 role="alertdialog" 또는 role="dialog"요소와 함께 사용</p><p>-&gt; 사용할 수 없는 요소에 aria-hidden="true" 속성을 선언해서 보조기기가 무시하도록 설정. 포인팅 기능도 차단하도록 처리</p><ul><li>false(default) : 모달 콘텐츠 아님</li><li>true : 모달 콘텐츠</li></ul><p><br></p>'