export const dragSortable = '<h1><strong>Sortable(feat. drag)</strong></h1><p><br></p><p><br></p><p><strong>draggable&nbsp;</strong>드래그가능 여부를 나타내는열거형특성true/false</p><p><br></p><h2>이벤트</h2><p><strong>drag</strong>&nbsp;<span style="color: rgb(27, 27, 27); background-color: rgb(255, 255, 255);">이벤트는 사용자가 요소 또는 텍스트를 드래그하는 동안 매 수백 밀리초마다 발생합니다.</span></p><p><strong>dragstart</strong>&nbsp;<span style="color: rgb(27, 27, 27); background-color: rgb(255, 255, 255);">이벤트는 사용자가 요소나 선택한 텍스트를 드래그하기 시작할 때 발생합니다.</span></p><p><strong>dragend&nbsp;</strong><span style="color: rgb(27, 27, 27); background-color: rgb(255, 255, 255);">이벤트는 마우스 버튼을 놓거나 이스케이프 키를 눌러 드래그 작업이 끝나게 되면 발생합니다.</span></p><p><strong>dragover&nbsp;</strong><span style="color: rgb(27, 27, 27); background-color: rgb(255, 255, 255);">이벤트는 요소 또는 텍스트 선택 항목이 유효한 놓기 대상 위로 드래그될 때(수백 밀리초마다) 시작됩니다.</span></p><p><strong>dragenter&nbsp;</strong>드래그한 요소 또는 텍스트 선택이 유효한 놓기 대상에 들어가면 이벤트가 시작됩니다&nbsp;.</p><p><strong>dragleave&nbsp;</strong>드래그한 요소 또는 텍스트 선택이 유효한 놓기 대상을 벗어나면 이벤트가 시작됩니다&nbsp;.</p><p><strong>drop&nbsp;</strong>요소 또는 텍스트 선택이 유효한 놓기 대상에 놓이면 이벤트가 시작됩니다&nbsp;.</p><p><br></p><h2>소스코드 SortableList</h2><ol><li><span style="color: rgb(86, 156, 214);">function</span> <span style="color: rgb(220, 220, 170);">SortableList</span>({</li><li>&nbsp;<span style="color: rgb(156, 220, 254);">data</span>,</li><li>&nbsp;<span style="color: rgb(156, 220, 254);">onDropItem</span>,</li><li>&nbsp;<span style="color: rgb(156, 220, 254);">onClickItem</span>,</li><li>&nbsp;<span style="color: rgb(156, 220, 254);">renderItem</span>,</li><li>}: <span style="color: rgb(78, 201, 176);">ISortableList</span>) {</li></ol><p><br></p><p><strong>매개변수</strong></p><p>data : Iist 항목 data</p><p>onDropItem : Drop이 되고 정렬 된 list 항목을 매개변수로 받음</p><p>renderItem : Item 항목. children</p><p><br></p><ol><li><span style="color: rgb(86, 156, 214);">const</span> [<span style="color: rgb(79, 193, 255);">startIndex</span>, <span style="color: rgb(220, 220, 170);">setStartInder</span>] = <span style="color: rgb(220, 220, 170);">useState</span>&lt;<span style="color: rgb(78, 201, 176);">number</span>&gt;(<span style="color: rgb(181, 206, 168);">0</span>);</li><li>&nbsp;<span style="color: rgb(86, 156, 214);">const</span> [<span style="color: rgb(79, 193, 255);">listData</span>, <span style="color: rgb(220, 220, 170);">setListData</span>] = <span style="color: rgb(220, 220, 170);">useState</span>&lt;<span style="color: rgb(78, 201, 176);">any</span>&gt;(<span style="color: rgb(156, 220, 254);">data</span>);</li><li><br></li><li>&nbsp;<span style="color: rgb(220, 220, 170);">useEffect</span>(() <span style="color: rgb(86, 156, 214);">=&gt;</span> {</li><li>&nbsp;&nbsp;<span style="color: rgb(220, 220, 170);">setListData</span>(<span style="color: rgb(156, 220, 254);">data</span>);</li><li>&nbsp;}, [<span style="color: rgb(156, 220, 254);">data</span>]);</li><li>&nbsp;<span style="color: rgb(86, 156, 214);">const</span> <span style="color: rgb(220, 220, 170);">onDragStart</span> = (<span style="color: rgb(156, 220, 254);">index</span>: <span style="color: rgb(78, 201, 176);">number</span>) <span style="color: rgb(86, 156, 214);">=&gt;</span> <span style="color: rgb(220, 220, 170);">setStartInder</span>(<span style="color: rgb(156, 220, 254);">index</span>);</li><li><span style="color: rgb(86, 156, 214);"> const</span> <span style="color: rgb(220, 220, 170);">onDrop</span> = <span style="color: rgb(220, 220, 170);">useCallback</span>(...)</li><li>&nbsp;<span style="color: rgb(197, 134, 192);">return</span> (</li><li>&nbsp;&nbsp;<span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">ul</span> <span style="color: rgb(156, 220, 254);">className</span>=<span style="color: rgb(206, 145, 120);">"lzTodoBody__list"</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li><span style="color: rgb(128, 128, 128);">&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(86, 156, 214);">{</span><span style="color: rgb(79, 193, 255);">listData</span>.<span style="color: rgb(220, 220, 170);">map</span>((<span style="color: rgb(156, 220, 254);">item</span>: <span style="color: rgb(78, 201, 176);">any</span>, <span style="color: rgb(156, 220, 254);">index</span>: <span style="color: rgb(78, 201, 176);">any</span>) <span style="color: rgb(86, 156, 214);">=&gt;</span> (</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(78, 201, 176);">SortableListItem</span></li><li><span style="color: rgb(128, 128, 128);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(156, 220, 254);">key</span>=<span style="color: rgb(86, 156, 214);">{</span><span style="color: rgb(156, 220, 254);">index</span> + <span style="color: rgb(156, 220, 254);">item</span>.<span style="color: rgb(156, 220, 254);">content</span><span style="color: rgb(86, 156, 214);">}</span></li><li><span style="color: rgb(128, 128, 128);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(156, 220, 254);">index</span>=<span style="color: rgb(86, 156, 214);">{</span><span style="color: rgb(156, 220, 254);">index</span><span style="color: rgb(86, 156, 214);">}</span></li><li><span style="color: rgb(128, 128, 128);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(156, 220, 254);">draggable</span>=<span style="color: rgb(86, 156, 214);">{true}</span></li><li><span style="color: rgb(128, 128, 128);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(156, 220, 254);">onDragStart</span>=<span style="color: rgb(86, 156, 214);">{</span><span style="color: rgb(220, 220, 170);">onDragStart</span><span style="color: rgb(86, 156, 214);">}</span></li><li><span style="color: rgb(128, 128, 128);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(156, 220, 254);">onDropItem</span>=<span style="color: rgb(86, 156, 214);">{</span><span style="color: rgb(220, 220, 170);">onDrop</span><span style="color: rgb(86, 156, 214);">}</span></li><li><span style="color: rgb(128, 128, 128);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(156, 220, 254);">onClickItem</span>=<span style="color: rgb(86, 156, 214);">{</span><span style="color: rgb(156, 220, 254);">onClickItem</span><span style="color: rgb(86, 156, 214);">}</span></li><li><span style="color: rgb(128, 128, 128);">&nbsp;&nbsp;&nbsp;&nbsp;&gt;</span></li><li><span style="color: rgb(128, 128, 128);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(86, 156, 214);">{</span><span style="color: rgb(220, 220, 170);">renderItem</span>(<span style="color: rgb(156, 220, 254);">item</span>, <span style="color: rgb(156, 220, 254);">index</span>)<span style="color: rgb(86, 156, 214);">}</span></li><li><span style="color: rgb(128, 128, 128);">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span style="color: rgb(78, 201, 176);">SortableListItem</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li><span style="color: rgb(128, 128, 128);">&nbsp;&nbsp;&nbsp;))</span><span style="color: rgb(86, 156, 214);">}</span></li><li><span style="color: rgb(128, 128, 128);">&nbsp;&nbsp;&nbsp;&lt;</span><span style="color: rgb(78, 201, 176);">SortableListItem</span></li><li><span style="color: rgb(128, 128, 128);">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(156, 220, 254);">key</span>=<span style="color: rgb(86, 156, 214);">{</span><span style="color: rgb(79, 193, 255);">listData</span>.<span style="color: rgb(156, 220, 254);">length</span><span style="color: rgb(86, 156, 214);">}</span></li><li><span style="color: rgb(128, 128, 128);">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(156, 220, 254);">index</span>=<span style="color: rgb(86, 156, 214);">{</span><span style="color: rgb(79, 193, 255);">listData</span>.<span style="color: rgb(156, 220, 254);">length</span><span style="color: rgb(86, 156, 214);">}</span></li><li><span style="color: rgb(128, 128, 128);">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(156, 220, 254);">draggable</span>=<span style="color: rgb(86, 156, 214);">{false}</span></li><li><span style="color: rgb(128, 128, 128);">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(156, 220, 254);">onDropItem</span>=<span style="color: rgb(86, 156, 214);">{</span><span style="color: rgb(220, 220, 170);">onDrop</span><span style="color: rgb(86, 156, 214);">}</span></li><li><span style="color: rgb(128, 128, 128);">&nbsp;&nbsp;&nbsp;/&gt;</span></li><li><span style="color: rgb(128, 128, 128);">&nbsp;&nbsp;&lt;/</span><span style="color: rgb(86, 156, 214);">ul</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li><span style="color: rgb(128, 128, 128);">&nbsp;);</span></li></ol><p><br></p><p>리스트에 있는 항목을 item으로 만들어 전체 출력, 맨 마지막 Item은 드래그 기능을 위해 빈 값을 넣음</p><p>onDragStart = 드래그가 시작하는 item의 인덱스값을 얻어 온다.</p><p>onDrop으로 drop된 index 위치와 드래그를 시작한 index를 기준으로 위치를 새로 정렬 한다.</p><p><br></p><h2>onDrop 함수 구현</h2><ol><li><span style="color: rgb(86, 156, 214);">const</span>&nbsp;<span style="color: rgb(220, 220, 170);">onDrop</span>&nbsp;=&nbsp;<span style="color: rgb(220, 220, 170);">useCallback</span>(</li><li>&nbsp;&nbsp;(<span style="color: rgb(156, 220, 254);">dropIndex</span>:&nbsp;<span style="color: rgb(78, 201, 176);">number</span>)&nbsp;<span style="color: rgb(86, 156, 214);">=&gt;</span>&nbsp;{</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(86, 156, 214);">const</span>&nbsp;<span style="color: rgb(79, 193, 255);">dragItem</span>&nbsp;=&nbsp;<span style="color: rgb(79, 193, 255);">listData</span>[<span style="color: rgb(79, 193, 255);">startIndex</span>];</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(86, 156, 214);">let</span>&nbsp;<span style="color: rgb(156, 220, 254);">list</span>&nbsp;= [...<span style="color: rgb(79, 193, 255);">listData</span>];</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(156, 220, 254);">list</span>.<span style="color: rgb(220, 220, 170);">splice</span>(<span style="color: rgb(79, 193, 255);">startIndex</span>,&nbsp;<span style="color: rgb(181, 206, 168);">1</span>);</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(86, 156, 214);">const</span>&nbsp;<span style="color: rgb(79, 193, 255);">newListData</span>&nbsp;=</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(79, 193, 255);">startIndex</span>&nbsp;&lt;&nbsp;<span style="color: rgb(156, 220, 254);">dropIndex</span></li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;? [</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...<span style="color: rgb(156, 220, 254);">list</span>.<span style="color: rgb(220, 220, 170);">slice</span>(<span style="color: rgb(181, 206, 168);">0</span>,&nbsp;<span style="color: rgb(156, 220, 254);">dropIndex</span>),</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(79, 193, 255);">dragItem</span>,</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...<span style="color: rgb(156, 220, 254);">list</span>.<span style="color: rgb(220, 220, 170);">slice</span>(<span style="color: rgb(156, 220, 254);">dropIndex</span>,&nbsp;<span style="color: rgb(156, 220, 254);">list</span>.<span style="color: rgb(156, 220, 254);">length</span>),</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: [</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...<span style="color: rgb(156, 220, 254);">list</span>.<span style="color: rgb(220, 220, 170);">slice</span>(<span style="color: rgb(181, 206, 168);">0</span>,&nbsp;<span style="color: rgb(156, 220, 254);">dropIndex</span>),</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(79, 193, 255);">dragItem</span>,</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...<span style="color: rgb(156, 220, 254);">list</span>.<span style="color: rgb(220, 220, 170);">slice</span>(<span style="color: rgb(156, 220, 254);">dropIndex</span>,&nbsp;<span style="color: rgb(156, 220, 254);">list</span>.<span style="color: rgb(156, 220, 254);">length</span>),</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;];</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(220, 220, 170);">setListData</span>(<span style="color: rgb(79, 193, 255);">newListData</span>);</li><li>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(220, 220, 170);">onDropItem</span>(<span style="color: rgb(79, 193, 255);">newListData</span>);</li><li>&nbsp;&nbsp;},</li><li>&nbsp;&nbsp;[<span style="color: rgb(79, 193, 255);">startIndex</span>,&nbsp;<span style="color: rgb(156, 220, 254);">onDropItem</span>,&nbsp;<span style="color: rgb(79, 193, 255);">listData</span>]</li><li>&nbsp;);</li></ol><p>slice() 함수를 이용하여 index를 통해 정렬</p><p><br></p><h2><strong>SortableListItem</strong></h2><ol><li><span style="color: rgb(86, 156, 214);">function</span> <span style="color: rgb(220, 220, 170);">SortableListItem</span>({</li><li>&nbsp;<span style="color: rgb(156, 220, 254);">index</span>,</li><li>&nbsp;<span style="color: rgb(156, 220, 254);">draggable</span>,</li><li>&nbsp;<span style="color: rgb(156, 220, 254);">children</span>,</li><li>&nbsp;<span style="color: rgb(156, 220, 254);">onDragStart</span>,</li><li>&nbsp;<span style="color: rgb(156, 220, 254);">onDropItem</span>,</li><li>&nbsp;<span style="color: rgb(156, 220, 254);">onClickItem</span>,</li><li>}: <span style="color: rgb(78, 201, 176);">ISortableListItem</span>) {</li></ol><p><br></p><p><strong>매개변수</strong></p><p>index : item의 index</p><p>children : 드래그할 children을 넣는다.</p><p>onClickItem : item 클릭 이벤트</p><p>onDragStart, onDropItem : 부모에 있는 함수를 그대로 내려받음</p><p><br></p><ol><li>&nbsp;<span style="color: rgb(86, 156, 214);">const</span> <span style="color: rgb(220, 220, 170);">onDragStartItem</span> = (<span style="color: rgb(156, 220, 254);">e</span>: <span style="color: rgb(78, 201, 176);">any</span>) <span style="color: rgb(86, 156, 214);">=&gt;</span> {</li><li>&nbsp;&nbsp;<span style="color: rgb(156, 220, 254);">e</span>.<span style="color: rgb(156, 220, 254);">target</span>.<span style="color: rgb(156, 220, 254);">classList</span>.<span style="color: rgb(220, 220, 170);">add</span>(<span style="color: rgb(206, 145, 120);">"dragstart"</span>);</li><li>&nbsp;&nbsp;<span style="color: rgb(220, 220, 170);">onDragStart</span>(<span style="color: rgb(156, 220, 254);">index</span>);</li><li>&nbsp;};</li><li><br></li><li>&nbsp;<span style="color: rgb(86, 156, 214);">const</span> <span style="color: rgb(220, 220, 170);">onDragEnd</span> = (<span style="color: rgb(156, 220, 254);">e</span>: <span style="color: rgb(78, 201, 176);">any</span>) <span style="color: rgb(86, 156, 214);">=&gt;</span> <span style="color: rgb(156, 220, 254);">e</span>.<span style="color: rgb(156, 220, 254);">target</span>.<span style="color: rgb(156, 220, 254);">classList</span>.<span style="color: rgb(220, 220, 170);">remove</span>(<span style="color: rgb(206, 145, 120);">"dragstart"</span>);</li><li>&nbsp;<span style="color: rgb(86, 156, 214);">const</span> <span style="color: rgb(220, 220, 170);">onDragOver</span> = (<span style="color: rgb(156, 220, 254);">e</span>: <span style="color: rgb(78, 201, 176);">any</span>) <span style="color: rgb(86, 156, 214);">=&gt;</span> <span style="color: rgb(156, 220, 254);">e</span>.<span style="color: rgb(220, 220, 170);">preventDefault</span>();</li><li>&nbsp;<span style="color: rgb(86, 156, 214);">const</span> <span style="color: rgb(220, 220, 170);">onDragEnter</span> = (<span style="color: rgb(156, 220, 254);">e</span>: <span style="color: rgb(78, 201, 176);">any</span>) <span style="color: rgb(86, 156, 214);">=&gt;</span> {</li><li>&nbsp;&nbsp;<span style="color: rgb(156, 220, 254);">e</span>.<span style="color: rgb(156, 220, 254);">currentTarget</span>.<span style="color: rgb(156, 220, 254);">classList</span>.<span style="color: rgb(220, 220, 170);">add</span>(<span style="color: rgb(206, 145, 120);">"dragover"</span>);</li><li>&nbsp;};</li><li>&nbsp;<span style="color: rgb(86, 156, 214);">const</span> <span style="color: rgb(220, 220, 170);">onDragLeave</span> = (<span style="color: rgb(156, 220, 254);">e</span>: <span style="color: rgb(78, 201, 176);">any</span>) <span style="color: rgb(86, 156, 214);">=&gt;</span> <span style="color: rgb(156, 220, 254);">e</span>.<span style="color: rgb(156, 220, 254);">target</span>.<span style="color: rgb(156, 220, 254);">classList</span>.<span style="color: rgb(220, 220, 170);">remove</span>(<span style="color: rgb(206, 145, 120);">"dragover"</span>);</li><li>&nbsp;<span style="color: rgb(86, 156, 214);">const</span> <span style="color: rgb(220, 220, 170);">onDrop</span> = (<span style="color: rgb(156, 220, 254);">e</span>: <span style="color: rgb(78, 201, 176);">any</span>) <span style="color: rgb(86, 156, 214);">=&gt;</span> {</li><li>&nbsp;&nbsp;<span style="color: rgb(156, 220, 254);">e</span>.<span style="color: rgb(156, 220, 254);">target</span>.<span style="color: rgb(156, 220, 254);">classList</span>.<span style="color: rgb(220, 220, 170);">remove</span>(<span style="color: rgb(206, 145, 120);">"dragover"</span>);</li><li>&nbsp;&nbsp;<span style="color: rgb(220, 220, 170);">onDropItem</span>(<span style="color: rgb(156, 220, 254);">index</span>);</li><li>&nbsp;};</li></ol><p><br></p><p><strong>onDrag... Event</strong></p><p>드래그 이벤트 발생시 사용자의 눈에 알 수 있도록 하기 위해서 class를 추가한다.</p><p><br></p><ol><li>&nbsp;<span style="color: rgb(197, 134, 192);">return</span> (</li><li>&nbsp;&nbsp;<span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">li</span></li><li>&nbsp;&nbsp;&nbsp;<span style="color: rgb(156, 220, 254);">className</span>=<span style="color: rgb(206, 145, 120);">"item"</span></li><li>&nbsp;&nbsp;&nbsp;<span style="color: rgb(156, 220, 254);">draggable</span>=<span style="color: rgb(86, 156, 214);">{</span><span style="color: rgb(156, 220, 254);">draggable</span> ? <span style="color: rgb(156, 220, 254);">draggable</span> : <span style="color: rgb(86, 156, 214);">false}</span></li><li>&nbsp;&nbsp;&nbsp;<span style="color: rgb(156, 220, 254);">onDragStart</span>=<span style="color: rgb(86, 156, 214);">{</span><span style="color: rgb(220, 220, 170);">onDragStartItem</span><span style="color: rgb(86, 156, 214);">}</span></li><li>&nbsp;&nbsp;&nbsp;<span style="color: rgb(156, 220, 254);">onDragEnd</span>=<span style="color: rgb(86, 156, 214);">{</span><span style="color: rgb(220, 220, 170);">onDragEnd</span><span style="color: rgb(86, 156, 214);">}</span></li><li>&nbsp;&nbsp;&nbsp;<span style="color: rgb(156, 220, 254);">onDragEnter</span>=<span style="color: rgb(86, 156, 214);">{</span><span style="color: rgb(220, 220, 170);">onDragEnter</span><span style="color: rgb(86, 156, 214);">}</span></li><li>&nbsp;&nbsp;&nbsp;<span style="color: rgb(156, 220, 254);">onDragLeave</span>=<span style="color: rgb(86, 156, 214);">{</span><span style="color: rgb(220, 220, 170);">onDragLeave</span><span style="color: rgb(86, 156, 214);">}</span></li><li>&nbsp;&nbsp;&nbsp;<span style="color: rgb(156, 220, 254);">onDragOver</span>=<span style="color: rgb(86, 156, 214);">{</span><span style="color: rgb(220, 220, 170);">onDragOver</span><span style="color: rgb(86, 156, 214);">}</span></li><li>&nbsp;&nbsp;&nbsp;<span style="color: rgb(156, 220, 254);">onDrop</span>=<span style="color: rgb(86, 156, 214);">{</span><span style="color: rgb(220, 220, 170);">onDrop</span><span style="color: rgb(86, 156, 214);">}</span></li><li>&nbsp;&nbsp;<span style="color: rgb(128, 128, 128);">&gt;</span></li><li>&nbsp;&nbsp;&nbsp;<span style="color: rgb(86, 156, 214);">{</span><span style="color: rgb(156, 220, 254);">children</span><span style="color: rgb(86, 156, 214);">}</span></li><li>&nbsp;&nbsp;<span style="color: rgb(128, 128, 128);">&lt;/</span><span style="color: rgb(86, 156, 214);">li</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li>&nbsp;);</li></ol>'

// eslint-disable-next-line no-template-curly-in-string
export const draggable = '<h2>draggable</h2><p><br></p><p><br></p><ol><li> <span style="color: rgb(86, 156, 214);">const</span> [<span style="color: rgb(79, 193, 255);">position</span>, <span style="color: rgb(220, 220, 170);">setPosition</span>] = <span style="color: rgb(220, 220, 170);">useState</span>&lt;{ <span style="color: rgb(156, 220, 254);">x</span>: <span style="color: rgb(78, 201, 176);">number</span>; <span style="color: rgb(156, 220, 254);">y</span>: <span style="color: rgb(78, 201, 176);">number</span> }&gt;({</li><li>&nbsp; &nbsp; <span style="color: rgb(156, 220, 254);">x:</span> -<span style="color: rgb(181, 206, 168);">500</span>,</li><li>&nbsp; &nbsp; <span style="color: rgb(156, 220, 254);">y:</span> -<span style="color: rgb(181, 206, 168);">500</span>,</li><li>&nbsp; }); </li></ol><p>초기 Position 값으로, 불러오기 전에 위치를 숨기기 위해 음수값을 줌</p><ol><li>&nbsp; <span style="color: rgb(86, 156, 214);">const</span> [<span style="color: rgb(79, 193, 255);">clickPosition</span>, <span style="color: rgb(220, 220, 170);">setClickPosition</span>] = <span style="color: rgb(220, 220, 170);">useState</span>&lt;{ <span style="color: rgb(156, 220, 254);">x</span>: <span style="color: rgb(78, 201, 176);">number</span>; <span style="color: rgb(156, 220, 254);">y</span>: <span style="color: rgb(78, 201, 176);">number</span> }&gt;({</li><li>&nbsp; &nbsp; <span style="color: rgb(156, 220, 254);">x:</span> <span style="color: rgb(181, 206, 168);">0</span>,</li><li>&nbsp; &nbsp; <span style="color: rgb(156, 220, 254);">y:</span> <span style="color: rgb(181, 206, 168);">0</span>,</li><li>&nbsp; });</li></ol><p>Handle 클릭시 위치를 저장하기 위해 선언 하였고, </p><p>마우스로 Handle을 클릭한 위치에서부터 움직이기 위해서 필요</p><ol><li><br></li><li>&nbsp; <span style="color: rgb(86, 156, 214);">const</span> <span style="color: rgb(79, 193, 255);">Move</span> = <span style="color: rgb(220, 220, 170);">useMemo</span>(</li><li>&nbsp; &nbsp; () <span style="color: rgb(86, 156, 214);">=&gt;</span> <span style="color: rgb(220, 220, 170);">debounce</span>((<span style="color: rgb(156, 220, 254);">x</span>: <span style="color: rgb(78, 201, 176);">number</span>, <span style="color: rgb(156, 220, 254);">y</span>: <span style="color: rgb(78, 201, 176);">number</span>) <span style="color: rgb(86, 156, 214);">=&gt;</span> <span style="color: rgb(220, 220, 170);">onMove</span>(<span style="color: rgb(156, 220, 254);">x</span>, <span style="color: rgb(156, 220, 254);">y</span>), <span style="color: rgb(181, 206, 168);">500</span>),</li><li>&nbsp; &nbsp; [<span style="color: rgb(220, 220, 170);">onMove</span>]</li><li>&nbsp; );</li></ol><p>debounce 함수를 사용하여 Move가 끝나는 시점에만 onMove 함수가 발생</p><ol><li>&nbsp; <span style="color: rgb(86, 156, 214);">const</span> <span style="color: rgb(220, 220, 170);">onMouseMove</span> = <span style="color: rgb(220, 220, 170);">useCallback</span>(</li><li>&nbsp; &nbsp; (<span style="color: rgb(156, 220, 254);">e</span>: <span style="color: rgb(78, 201, 176);">any</span>) <span style="color: rgb(86, 156, 214);">=&gt;</span> {</li><li>&nbsp; &nbsp; &nbsp; <span style="color: rgb(220, 220, 170);">setPosition</span>({</li><li>&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: rgb(156, 220, 254);">x:</span> <span style="color: rgb(156, 220, 254);">e</span>.<span style="color: rgb(156, 220, 254);">clientX</span> - <span style="color: rgb(79, 193, 255);">clickPosition</span>.<span style="color: rgb(156, 220, 254);">x</span>,</li><li>&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: rgb(156, 220, 254);">y:</span> <span style="color: rgb(156, 220, 254);">e</span>.<span style="color: rgb(156, 220, 254);">clientY</span> - <span style="color: rgb(79, 193, 255);">clickPosition</span>.<span style="color: rgb(156, 220, 254);">y</span>,</li><li>&nbsp; &nbsp; &nbsp; });</li><li>&nbsp; &nbsp; &nbsp; <span style="color: rgb(220, 220, 170);">Move</span>(<span style="color: rgb(156, 220, 254);">e</span>.<span style="color: rgb(156, 220, 254);">clientX</span> - <span style="color: rgb(79, 193, 255);">clickPosition</span>.<span style="color: rgb(156, 220, 254);">x</span>, <span style="color: rgb(156, 220, 254);">e</span>.<span style="color: rgb(156, 220, 254);">clientY</span> - <span style="color: rgb(79, 193, 255);">clickPosition</span>.<span style="color: rgb(156, 220, 254);">y</span>);</li><li>&nbsp; &nbsp; },</li><li>&nbsp; &nbsp; [<span style="color: rgb(220, 220, 170);">setPosition</span>, <span style="color: rgb(79, 193, 255);">clickPosition</span>, <span style="color: rgb(79, 193, 255);">Move</span>]</li><li>&nbsp; );</li></ol><p>e.client: document의 마우스 위치, x,y는 마우스 위치에서 handle 클릭 위치를 뺀 값으로 container의 모서리가 아닌, 현재 클릭중인 handle의 위치로 부터 움직이도록 하기 위함</p><ol><li>&nbsp; <span style="color: rgb(86, 156, 214);">const</span> <span style="color: rgb(220, 220, 170);">removeMouse</span> = <span style="color: rgb(220, 220, 170);">useCallback</span>(() <span style="color: rgb(86, 156, 214);">=&gt;</span> {</li><li>&nbsp; &nbsp; <span style="color: rgb(156, 220, 254);">document</span>.<span style="color: rgb(220, 220, 170);">removeEventListener</span>(<span style="color: rgb(206, 145, 120);">"mousemove"</span>, <span style="color: rgb(220, 220, 170);">onMouseMove</span>);</li><li>&nbsp; &nbsp; <span style="color: rgb(156, 220, 254);">document</span>.<span style="color: rgb(220, 220, 170);">removeEventListener</span>(<span style="color: rgb(206, 145, 120);">"mouseup"</span>, <span style="color: rgb(220, 220, 170);">removeMouse</span>);</li><li>&nbsp; &nbsp; <span style="color: rgb(156, 220, 254);">document</span>.<span style="color: rgb(220, 220, 170);">removeEventListener</span>(<span style="color: rgb(206, 145, 120);">"mouseleave"</span>, <span style="color: rgb(220, 220, 170);">removeMouse</span>);</li><li>&nbsp; }, [<span style="color: rgb(220, 220, 170);">onMouseMove</span>]);</li><li><br></li><li>&nbsp; <span style="color: rgb(86, 156, 214);">const</span> <span style="color: rgb(220, 220, 170);">onMouseDownMemoHandle</span> = <span style="color: rgb(220, 220, 170);">useCallback</span>(</li><li>&nbsp; &nbsp; (<span style="color: rgb(156, 220, 254);">e</span>: <span style="color: rgb(78, 201, 176);">any</span>) <span style="color: rgb(86, 156, 214);">=&gt;</span> {</li><li>&nbsp; &nbsp; &nbsp; <span style="color: rgb(86, 156, 214);">const</span> { <span style="color: rgb(79, 193, 255);">left</span>, <span style="color: rgb(79, 193, 255);">top</span> } = <span style="color: rgb(156, 220, 254);">e</span>.<span style="color: rgb(156, 220, 254);">target</span>.<span style="color: rgb(220, 220, 170);">getBoundingClientRect</span>();</li><li>&nbsp; &nbsp; &nbsp; <span style="color: rgb(220, 220, 170);">setClickPosition</span>({ <span style="color: rgb(156, 220, 254);">x:</span> <span style="color: rgb(156, 220, 254);">e</span>.<span style="color: rgb(156, 220, 254);">clientX</span> - <span style="color: rgb(79, 193, 255);">left</span>, <span style="color: rgb(156, 220, 254);">y:</span> <span style="color: rgb(156, 220, 254);">e</span>.<span style="color: rgb(156, 220, 254);">clientY</span> - <span style="color: rgb(79, 193, 255);">top</span> });</li><li>&nbsp; &nbsp; &nbsp; <span style="color: rgb(156, 220, 254);">document</span>.<span style="color: rgb(220, 220, 170);">addEventListener</span>(<span style="color: rgb(206, 145, 120);">"mousemove"</span>, <span style="color: rgb(220, 220, 170);">onMouseMove</span>);</li><li>&nbsp; &nbsp; &nbsp; <span style="color: rgb(156, 220, 254);">document</span>.<span style="color: rgb(220, 220, 170);">addEventListener</span>(<span style="color: rgb(206, 145, 120);">"mouseup"</span>, <span style="color: rgb(220, 220, 170);">removeMouse</span>);</li><li>&nbsp; &nbsp; &nbsp; <span style="color: rgb(156, 220, 254);">document</span>.<span style="color: rgb(156, 220, 254);">body</span>.<span style="color: rgb(220, 220, 170);">addEventListener</span>(<span style="color: rgb(206, 145, 120);">"mouseleave"</span>, <span style="color: rgb(220, 220, 170);">removeMouse</span>);</li><li>&nbsp; &nbsp; },</li><li>&nbsp; &nbsp; [<span style="color: rgb(220, 220, 170);">onMouseMove</span>, <span style="color: rgb(220, 220, 170);">removeMouse</span>]</li><li>&nbsp; );</li></ol><p>Handle을 클릭하면 동작하는 함수로, Handle의 왼쪽 위 모서리부분에서 마우스로 클릭한 Handle의 위치를 빼서 현재 Handle의 위치를 구함</p><ol><li><br></li><li>&nbsp; <span style="color: rgb(197, 134, 192);">return</span> (</li><li>&nbsp; &nbsp; <span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">div</span></li><li>&nbsp; &nbsp; &nbsp; <span style="color: rgb(156, 220, 254);">className</span>=<span style="color: rgb(86, 156, 214);">{</span><span style="color: rgb(156, 220, 254);">containerClass</span><span style="color: rgb(86, 156, 214);">}</span></li><li>&nbsp; &nbsp; &nbsp; <span style="color: rgb(156, 220, 254);">style</span>=<span style="color: rgb(86, 156, 214);">{</span>{</li><li>&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: rgb(156, 220, 254);">transform:</span> <span style="color: rgb(206, 145, 120);">`translate(</span><span style="color: rgb(86, 156, 214);">${</span><span style="color: rgb(79, 193, 255);">position</span>.<span style="color: rgb(156, 220, 254);">x</span><span style="color: rgb(86, 156, 214);">}</span><span style="color: rgb(206, 145, 120);">px, </span><span style="color: rgb(86, 156, 214);">${</span><span style="color: rgb(79, 193, 255);">position</span>.<span style="color: rgb(156, 220, 254);">y</span><span style="color: rgb(86, 156, 214);">}</span><span style="color: rgb(206, 145, 120);">px)`</span>,</li><li>&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: rgb(156, 220, 254);">position:</span> <span style="color: rgb(206, 145, 120);">"absolute"</span>,</li><li>&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: rgb(156, 220, 254);">zIndex:</span> <span style="color: rgb(181, 206, 168);">10</span>,</li><li>&nbsp; &nbsp; &nbsp; }<span style="color: rgb(86, 156, 214);">}</span></li><li>&nbsp; &nbsp; <span style="color: rgb(128, 128, 128);">&gt;</span></li><li>&nbsp; &nbsp; &nbsp; <span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">div</span> <span style="color: rgb(156, 220, 254);">className</span>=<span style="color: rgb(86, 156, 214);">{</span><span style="color: rgb(156, 220, 254);">headerClass</span><span style="color: rgb(86, 156, 214);">}</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li>&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">span</span> <span style="color: rgb(156, 220, 254);">onMouseDown</span>=<span style="color: rgb(86, 156, 214);">{</span><span style="color: rgb(220, 220, 170);">onMouseDownMemoHandle</span><span style="color: rgb(86, 156, 214);">}</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(78, 201, 176);">MdDragHandle</span> <span style="color: rgb(128, 128, 128);">/&gt;</span></li><li>&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: rgb(128, 128, 128);">&lt;/</span><span style="color: rgb(86, 156, 214);">span</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li>&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(86, 156, 214);">span</span> <span style="color: rgb(156, 220, 254);">onClick</span>=<span style="color: rgb(86, 156, 214);">{</span><span style="color: rgb(220, 220, 170);">onClickClose</span><span style="color: rgb(86, 156, 214);">}</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style="color: rgb(128, 128, 128);">&lt;</span><span style="color: rgb(78, 201, 176);">AiOutlineClose</span> <span style="color: rgb(128, 128, 128);">/&gt;</span></li><li>&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: rgb(128, 128, 128);">&lt;/</span><span style="color: rgb(86, 156, 214);">span</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li>&nbsp; &nbsp; &nbsp; <span style="color: rgb(128, 128, 128);">&lt;/</span><span style="color: rgb(86, 156, 214);">div</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li>&nbsp; &nbsp; &nbsp; <span style="color: rgb(86, 156, 214);">{</span><span style="color: rgb(156, 220, 254);">children</span><span style="color: rgb(86, 156, 214);">}</span></li><li>&nbsp; &nbsp; <span style="color: rgb(128, 128, 128);">&lt;/</span><span style="color: rgb(86, 156, 214);">div</span><span style="color: rgb(128, 128, 128);">&gt;</span></li><li>&nbsp; );</li><li>}</li><li><br></li><li><span style="color: rgb(197, 134, 192);">export</span> <span style="color: rgb(197, 134, 192);">default</span> <span style="color: rgb(220, 220, 170);">Draggable</span>;</li></ol><p><br></p>'